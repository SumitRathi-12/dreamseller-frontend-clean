{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/order.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction OrderListComponent_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.purchaseDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.voucherId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.cancelled);\n  }\n}\nexport let OrderListComponent = /*#__PURE__*/(() => {\n  class OrderListComponent {\n    constructor(orderService, sanitizer) {\n      this.orderService = orderService;\n      this.sanitizer = sanitizer;\n      this.orders = [];\n      this.newOrder = {\n        id: 0,\n        cancelled: false,\n        email: '',\n        purchaseDate: '',\n        voucherId: 0\n      };\n      this.jsonLdScript = null;\n    }\n    ngOnInit() {\n      this.fetchOrders();\n    }\n    fetchOrders() {\n      this.orderService.getOrders().subscribe(data => {\n        this.orders = data;\n        this.generateJsonLd();\n      }, error => {\n        console.error('Error fetching orders:', error);\n      });\n    }\n    createOrder() {\n      this.orderService.createOrder(this.newOrder).subscribe(response => {\n        console.log('Order created successfully:', response);\n        this.orders.push(response);\n        this.generateJsonLd(); // Refresh JSON-LD data\n        this.resetForm();\n      }, error => {\n        console.error('Error creating order:', error);\n      });\n    }\n    resetForm() {\n      this.newOrder = {\n        id: 0,\n        cancelled: false,\n        email: '',\n        purchaseDate: '',\n        voucherId: 0\n      };\n    }\n    generateJsonLd() {\n      const ordersLd = this.orders.map(order => ({\n        \"@type\": \"Order\",\n        \"orderDate\": order.purchaseDate,\n        \"confirmationNumber\": order.voucherId,\n        \"customer\": {\n          \"@type\": \"Person\",\n          \"email\": order.email\n        }\n      }));\n      const jsonLd = {\n        \"@context\": \"https://schema.org\",\n        \"@graph\": ordersLd\n      };\n      this.jsonLdScript = this.sanitizer.bypassSecurityTrustHtml(`<script type=\"application/ld+json\">${JSON.stringify(jsonLd)}</script>`);\n    }\n    static {\n      this.ɵfac = function OrderListComponent_Factory(t) {\n        return new (t || OrderListComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: OrderListComponent,\n        selectors: [[\"app-order-list\"]],\n        decls: 35,\n        vars: 4,\n        consts: [[1, \"container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"purchaseDate\"], [\"type\", \"datetime-local\", \"id\", \"purchaseDate\", \"name\", \"purchaseDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"voucherId\"], [\"type\", \"number\", \"id\", \"voucherId\", \"name\", \"voucherId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n        template: function OrderListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Order List\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function OrderListComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.createOrder();\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Email:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"input\", 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function OrderListComponent_Template_input_ngModelChange_7_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.newOrder.email, $event) || (ctx.newOrder.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n            i0.ɵɵtext(10, \"Purchase Date:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"input\", 6);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function OrderListComponent_Template_input_ngModelChange_11_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.newOrder.purchaseDate, $event) || (ctx.newOrder.purchaseDate = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Voucher ID:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"input\", 8);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function OrderListComponent_Template_input_ngModelChange_15_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.newOrder.voucherId, $event) || (ctx.newOrder.voucherId = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"button\", 9);\n            i0.ɵɵtext(17, \"Add Order\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"h3\");\n            i0.ɵɵtext(19, \"Existing Orders\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"table\", 10)(21, \"thead\")(22, \"tr\")(23, \"th\");\n            i0.ɵɵtext(24, \"ID\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"th\");\n            i0.ɵɵtext(26, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"th\");\n            i0.ɵɵtext(28, \"Purchase Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"th\");\n            i0.ɵɵtext(30, \"Voucher ID\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"th\");\n            i0.ɵɵtext(32, \"Cancelled\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(33, \"tbody\");\n            i0.ɵɵtemplate(34, OrderListComponent_tr_34_Template, 11, 5, \"tr\", 11);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newOrder.email);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newOrder.purchaseDate);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newOrder.voucherId);\n            i0.ɵɵadvance(19);\n            i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n          }\n        },\n        dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n        styles: [\".card[_ngcontent-%COMP%]{margin-top:20px}h2[_ngcontent-%COMP%]{margin-bottom:20px}\"]\n      });\n    }\n  }\n  return OrderListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}